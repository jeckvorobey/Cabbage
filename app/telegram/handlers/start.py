"""–•–µ–Ω–¥–ª–µ—Ä /start: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ."""
from __future__ import annotations

from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

from app.core.db import get_session
from app.services.user_service import UserService
from app.core.config import settings

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message) -> None:
    # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ Telegram-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    tg_user = message.from_user
    if tg_user is None:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    tg_id = tg_user.id
    full_name = tg_user.full_name
    username = tg_user.username
    first_name = tg_user.first_name
    last_name = tg_user.last_name
    is_bot = tg_user.is_bot
    language_code = getattr(tg_user, "language_code", None)
    is_premium = getattr(tg_user, "is_premium", None)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–∞—à–µ–π –ë–î
    async for session in get_session():
        service = UserService(session)
        await service.get_or_create_by_telegram(
            telegram_id=tg_id,
            name=full_name,
            username=username,
            first_name=first_name,
            last_name=last_name,
            is_bot=is_bot,
            language_code=language_code,
            is_premium=is_premium,
        )
        break

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω", web_app=WebAppInfo(url=settings.frontend_webapp_url or ""))]
    ])
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–≤–æ—â–Ω–æ–π –º–∞–≥–∞–∑–∏–Ω!\n"
        "–û—Ç–∫—Ä–æ–π—Ç–µ –ú–∏–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
    )
